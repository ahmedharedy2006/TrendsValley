@model ChangePasswordViewModel
@{
    Layout = "~/Areas/Customer/Views/Shared/_ProfileLayout.cshtml";
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="fixed top-4 right-4 z-50 animate-fade-in">
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg shadow-lg flex items-center justify-between">
            <span class="flex items-center">
                <i class="fas fa-check-circle mr-2"></i>
                @TempData["SuccessMessage"]
            </span>
            <button type="button" class="text-green-700 hover:text-green-900" onclick="closeMessage('successMessage')">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
}

<div class="mb-6 lg:mb-8">
    <h2 class="text-xl lg:text-2xl font-bold text-gray-800">Change Password</h2>
    <p class="text-gray-500 text-sm lg:text-base">Update your password to keep your account secure</p>
</div>

<div class="bg-white p-4 lg:p-6 rounded-xl shadow-sm border border-gray-100">
    <form asp-action="ChangePassword" method="post">
        @Html.AntiForgeryToken()

        <div class="space-y-4">
            <!-- Current Password -->
            <div>
                <label asp-for="CurrentPassword" class="block text-sm font-medium text-gray-700 mb-1"></label>
                <input asp-for="CurrentPassword" type="password" autocomplete="current-password"
                       class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
                       required>
                <span asp-validation-for="CurrentPassword" class="mt-1 text-sm text-red-600"></span>
            </div>

            <!-- New Password -->
            <div>
                <label asp-for="NewPassword" class="block text-sm font-medium text-gray-700 mb-1"></label>
                <input asp-for="NewPassword" type="password" autocomplete="new-password" id="newPassword"
                       class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
                       required>
                <span asp-validation-for="NewPassword" class="mt-1 text-sm text-red-600"></span>
                <div id="passwordStrength" class="mt-2">
                    <div class="flex gap-1 h-[4px]">
                        <!-- Increased height to 4px -->
                        <div id="strengthBar1" class="flex-1 bg-gray-200 rounded-full"></div>
                        <div id="strengthBar2" class="flex-1 bg-gray-200 rounded-full"></div>
                        <div id="strengthBar3" class="flex-1 bg-gray-200 rounded-full"></div>
                        <div id="strengthBar4" class="flex-1 bg-gray-200 rounded-full"></div>
                    </div>
                    <p id="passwordStrengthText" class="text-xs mt-2 text-[#076b63]"></p> <!-- Slightly increased margin-top -->
                </div>
                <p class="mt-1 text-xs text-gray-500">
                    Password must contain at least 8 characters with uppercase, lowercase, number, and special character
                </p>
            </div>

            <!-- Confirm Password -->
            <div>
                <label asp-for="ConfirmPassword" class="block text-sm font-medium text-gray-700 mb-1"></label>
                <input asp-for="ConfirmPassword" type="password" autocomplete="new-password"
                       class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
                       required>
                <span asp-validation-for="ConfirmPassword" class="mt-1 text-sm text-red-600"></span>
            </div>
        </div>

        <div class="flex justify-end gap-3 mt-6">
            <a asp-controller="Profile" asp-action="Security"
               class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors">
                Cancel
            </a>
            <button type="submit" id="submitButton"
                    class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-[#076b63] transition-colors flex items-center">
                <span id="btnText">Update Password</span>
                <i id="spinner" class="fas fa-spinner fa-spin ml-2 hidden"></i>
            </button>
        </div>
    </form>

    <div class="mt-4 text-center">
        <a asp-area="Customer" asp-controller="Auth" asp-action="ForgotPassword"
           class="text-sm text-primary hover:text-[#076b63] hover:underline">
            Forgot your password?
        </a>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password strength indicator
                    document.getElementById('newPassword')?.addEventListener('input', function() {
            const password = this.value;
            const strengthText = document.getElementById('passwordStrengthText');

            // Reset all bars to gray
            for (let i = 1; i <= 4; i++) {
                document.getElementById(`strengthBar${i}`).className = 'flex-1 bg-gray-200 rounded-full';
            }

            if (!password) {
                strengthText.textContent = '';
                return;
            }

            // Check password strength
            let strength = 0;
            if (password.length >= 8) strength++;
            if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;

            // Update UI with your primary color
            if (strength >= 1) {
                document.getElementById('strengthBar1').className = 'flex-1 bg-[#076b63] rounded-full h-[4px]';
                strengthText.textContent = 'Weak';
            }
            if (strength >= 2) {
                document.getElementById('strengthBar2').className = 'flex-1 bg-[#076b63] rounded-full h-[4px]';
                strengthText.textContent = 'Medium';
            }
            if (strength >= 3) {
                document.getElementById('strengthBar3').className = 'flex-1 bg-[#076b63] rounded-full h-[4px]';
                strengthText.textContent = 'Strong';
            }
            if (strength >= 4) {
                document.getElementById('strengthBar4').className = 'flex-1 bg-[#076b63] rounded-full h-[4px]';
                strengthText.textContent = 'Very Strong';
            }
        });

            // Form submission loading state
            const form = document.querySelector('form');
            const submitButton = document.getElementById('submitButton');
            const btnText = document.getElementById('btnText');
            const spinner = document.getElementById('spinner');

            form?.addEventListener('submit', function() {
                submitButton.disabled = true;
                btnText.textContent = 'Updating...';
                spinner.classList.remove('hidden');
            });

            // Close success message
            setTimeout(() => {
                const successMessage = document.getElementById('successMessage');
                if (successMessage) {
                    successMessage.classList.add('animate-fade-out');
                    setTimeout(() => successMessage.remove(), 1000);
                }
            }, 5000);
        });

        function closeMessage(id) {
            let element = document.getElementById(id);
            if (element) {
                element.classList.add('animate-fade-out');
                setTimeout(() => element.remove(), 1000);
            }
        }
    </script>
}

<style>
    .animate-fade-in {
        opacity: 0;
        transform: translateY(-10px);
        animation: fadeIn 0.5s ease-out forwards;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-out {
        animation: fadeOut 1s ease-out forwards;
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 0;
            transform: translateY(-10px);
        }
    }
</style>