@functions {
    public string IsActive(string controller, params string[] actions)
    {
        var currentController = ViewContext.RouteData.Values["controller"].ToString();
        var currentAction = ViewContext.RouteData.Values["action"].ToString();

        return currentController == controller && actions.Contains(currentAction)
            ? "block py-2 px-4 text-primary bg-gray-100 font-medium"
            : "block py-2 px-4 text-gray-600 hover:bg-gray-100";
    }
}
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#088178',
                    }
                }
            }
        }
    </script>
    <style>
        .mobile-menu {
            transform: translateX(-100%);
            transition: transform 0.3s ease;
        }

            .mobile-menu.active {
                transform: translateX(0);
            }

        .profile-img {
            width: 32px;
            height: 32px;
        }

        @@media (min-width: 1024px) {
            .profile-img {
                width: 40px;
                height: 40px;
            }
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="lg:hidden bg-white shadow p-4 flex justify-between items-center">
        <h1 class="text-xl font-bold text-primary"> My Profile</h1>
        <button id="menuToggle" class="text-gray-600">
            <i class="fas fa-bars text-2xl"></i>
        </button>
    </div>

    <div class="flex flex-col lg:flex-row h-screen">
        <!-- Mobile Sidebar -->
        <div id="mobileMenu" class="mobile-menu lg:transform-none fixed lg:static inset-y-0 left-0 w-64 bg-white shadow-lg z-50 lg:z-auto">
            <!-- Profile Header -->
            <div class="p-4 border-b border-gray-200 flex items-center space-x-3">
                @if (user != null)
                {
                    <img src="https://api.dicebear.com/7.x/initials/svg?seed=@(user.Fname?[0])@(user.Lname?[0])&backgroundColor=088178&textColor=ffffff"
                         class="rounded-full w-9 h-9 object-cover"
                         width="36" height="36" alt="User">
                }
                <div>
                    <p class="font-medium">@user?.Fname @user?.Lname</p>
                    <p class="text-sm text-gray-500 truncate">@user?.Email</p>
                </div>
            </div>

            <nav class="mt-4">
                <a asp-controller="Profile" asp-action="Index" class="@IsActive("Profile","Index")">
                    <i class="fas fa-user mr-2"></i> Profile
                </a>
                <a asp-controller="Profile" asp-action="Security" class="@IsActive("Profile","Security","ManageDevices","ChangePassword","Enable2FA","VerifyEmailCode")">
                    <i class="fas fa-lock mr-2"></i> Login & Security
                </a>
                <a asp-controller="Profile" asp-action="Payments" class="@IsActive("Profile","Payments")">
                    <i class="fas fa-credit-card mr-2"></i> Your Payments
                </a>
                <a asp-controller="Profile" asp-action="Orders" class="@IsActive("Profile","Orders")">
                    <i class="fas fa-box mr-2"></i> Your Orders
                </a>
                <a asp-controller="Profile" asp-action="ContactUs" class="@IsActive("Profile","ContactUs")">
                    <i class="fas fa-envelope mr-2"></i> Contact Us
                </a>
            </nav>
        </div>

        <div id="overlay" class="hidden fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden"></div>
        <div class="flex-1 p-8 overflow-y-auto">
            <div class="max-w-4xl mx-auto">
                @RenderBody()
            </div>
        </div>

    </div>

    <script>
        const menuToggle = document.getElementById('menuToggle');
        const mobileMenu = document.getElementById('mobileMenu');
        const overlay = document.getElementById('overlay');

        menuToggle.addEventListener('click', () => {
            mobileMenu.classList.toggle('active');
            overlay.classList.toggle('hidden');
        });

        overlay.addEventListener('click', () => {
            mobileMenu.classList.remove('active');
            overlay.classList.add('hidden');
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>