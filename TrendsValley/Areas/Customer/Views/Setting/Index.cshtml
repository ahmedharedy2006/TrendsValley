@model AppUser
@{
    Layout = "~/Areas/Customer/Views/Shared/_SettingLayout.cshtml";
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="fixed top-4 right-4 z-50 animate-fade-in">
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg shadow-lg flex items-center justify-between">
            <span class="flex items-center">
                <i class="fas fa-check-circle mr-2"></i>
                @TempData["SuccessMessage"]
            </span>
            <button type="button" class="text-green-700 hover:text-green-900" onclick="closeMessage('successMessage')">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorMessage" class="fixed top-4 right-4 z-50 animate-fade-in">
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg shadow-lg flex items-center justify-between">
            <span class="flex items-center">
                <i class="fas fa-exclamation-circle mr-2"></i>
                @TempData["ErrorMessage"]
            </span>
            <button type="button" class="text-red-700 hover:text-red-900" onclick="closeMessage('errorMessage')">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
}

<div class="mb-6 lg:mb-8">
    <h2 class="text-xl lg:text-2xl font-bold text-gray-800">General Settings</h2>
    <p class="text-gray-500 text-sm lg:text-base">Customize your store preferences</p>
</div>

<div class="space-y-4 lg:space-y-8">
    <div class="bg-white p-4 lg:p-6 rounded-xl shadow-sm border border-gray-100">
        <h3 class="text-lg font-semibold mb-3 lg:mb-4 flex items-center">
            <i class="fas fa-language text-primary mr-2"></i>
            Language & Currency
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-3 lg:gap-4">
            <form asp-action="ChangeLanguage" method="post">
                <div>
                    <label class="block mb-1 lg:mb-2 text-gray-600 text-sm lg:text-base">Language</label>
                    <select name="PreferredLanguage" class="w-full p-2 lg:p-3 border rounded-lg focus:ring-2 focus:ring-primary text-sm lg:text-base" onchange="this.form.submit()">
                        <option value="en" selected="@(Model.PreferredLanguage == "en" ? "selected" : null)">English</option>
                        <option value="ar" selected="@(Model.PreferredLanguage == "ar" ? "selected" : null)">العربية</option>
                    </select>
                </div>
            </form>
            <form asp-action="ChangeCurrency" method="post">
                <div>
                    <label class="block mb-1 lg:mb-2 text-gray-600 text-sm lg:text-base">Currency</label>
                    <select name="currency" class="w-full p-2 lg:p-3 border rounded-lg focus:ring-2 focus:ring-primary text-sm lg:text-base"
                            onchange="this.form.submit()">
                        <option value="USD" selected="@(Model.Currency == "USD" ? "selected" : null)">US Dollar (USD)</option>
                        <option value="EGP" selected="@(Model.Currency == "EGP" ? "selected" : null)">Egyptian Pound (EGP)</option>
                    </select>
                </div>
            </form>
        </div>
    </div>

    <div class="bg-white p-4 lg:p-6 rounded-xl shadow-sm border border-gray-100">
        <h3 class="text-lg font-semibold mb-3 lg:mb-4 flex items-center">
            <i class="fas fa-credit-card text-primary mr-2"></i>
            Payment Methods
        </h3>
        <div class="space-y-2 lg:space-y-3">
            <form asp-action="ChangePayment" method="post" id="paymentForm">
                <label class="flex items-center justify-between p-3 lg:p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
                    <div class="flex items-center">
                        <i class="fas fa-money-bill-wave text-[#088178] mr-2 lg:mr-3"></i>
                        <span class="text-sm lg:text-base">Cash on Delivery</span>
                    </div>
                    <div class="relative">
                        <input type="radio"
                               name="PaymentMethod"
                               value="cash"
                               class="sr-only"
                        @(Model.PaymentMehtod == "cash" ? "checked" : "")
                               onchange="document.getElementById('paymentForm').submit()">
                        <div class="h-5 w-5 rounded-full border-2 flex items-center justify-center transition-colors
                        @(Model.PaymentMehtod == "cash" ? "border-[#088178] bg-[#088178]" : "border-gray-300")">
                            @if (Model.PaymentMehtod == "cash")
                            {
                                <svg class="h-3 w-3 text-white" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            }
                        </div>
                    </div>
                </label>

                <label class="flex items-center justify-between p-3 lg:p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
                    <div class="flex items-center">
                        <i class="fab fa-cc-visa text-blue-500 mr-2 lg:mr-3"></i>
                        <span class="text-sm lg:text-base">Credit/Debit Cards</span>
                    </div>
                    <div class="relative">
                        <input type="radio"
                               name="PaymentMethod"
                               value="credit"
                               class="sr-only"
                        @(Model.PaymentMehtod == "credit" ? "checked" : "")
                               onchange="document.getElementById('paymentForm').submit()">
                        <div class="h-5 w-5 rounded-full border-2 flex items-center justify-center transition-colors
                        @(Model.PaymentMehtod == "credit" ? "border-[#088178] bg-[#088178]" : "border-gray-300")">
                            @if (Model.PaymentMehtod == "credit")
                            {
                                <svg class="h-3 w-3 text-white" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            }
                        </div>
                    </div>
                </label>
            </form>
        </div>
    </div>

    <div class="bg-white p-4 lg:p-6 rounded-xl shadow-sm border border-gray-100">
        <h3 class="text-lg font-semibold mb-3 lg:mb-4 flex items-center">
            <i class="fas fa-truck text-[#088178] mr-2"></i>
            Shipping
        </h3>
        <div class="space-y-3 lg:space-y-4">
            <div class="mb-4">
                <label class="block mb-2 text-gray-600 text-sm lg:text-base font-medium">My Addresses</label>

                <!-- Primary Address Card -->
                <div class="mb-3 p-4 border border-[#088178] rounded-lg bg-[#f0f9f8]">
                    <div class="flex justify-between items-center">
                        <div>
                            <span class="text-sm font-medium text-[#088178]">Primary Address</span>
                            <p class="mt-1">@Model.StreetAddress</p>
                        </div>
                        <button onclick="showEditModal('primary', '@Model.StreetAddress')"
                                class="text-[#088178] hover:text-[#076b63]">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                    </div>
                </div>

                <!-- Secondary Address Card (if exists) -->
                @if (!string.IsNullOrEmpty(Model.StreetAddress2))
                {
                    <div class="mb-3 p-4 border border-gray-200 rounded-lg bg-white">
                        <div class="flex justify-between items-center">
                            <div>
                                <span class="text-sm font-medium text-gray-600">Secondary Address</span>
                                <p class="mt-1">@Model.StreetAddress2</p>
                            </div>
                            <div class="flex gap-2">
                                <button onclick="showEditModal('secondary', '@Model.StreetAddress2')"
                                        class="text-gray-600 hover:text-[#088178]">
                                    <i class="fas fa-edit"></i> Edit
                                </button>
                                <form asp-action="DeleteSecondaryAddress" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="userId" value="@Model.Id" />
                                    <button type="submit"
                                            class="text-gray-600 hover:text-red-500"
                                            onclick="return confirm('Are you sure you want to delete this address?')">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </form>
                                <form asp-action="SetPrimaryAddress" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="userId" value="@Model.Id" />
                                    <button type="submit"
                                            class="text-gray-600 hover:text-[#088178]">
                                        <i class="fas fa-star"></i> Set Primary
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }

                <!-- Add New Address Button -->
                @if (string.IsNullOrEmpty(Model.StreetAddress2))
                {
                    <button type="button"
                            class="w-full mt-2 px-4 py-2 border border-dashed border-gray-300 rounded-lg text-gray-600 hover:border-[#088178] hover:text-[#088178] transition-colors flex items-center justify-center"
                            onclick="showEditModal('new', '')">
                        <i class="fas fa-plus mr-2"></i>
                        Add Secondary Address
                    </button>
                }
            </div>

            <!-- Edit Address Modal -->
            <div id="addressModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
                <div class="bg-white rounded-xl p-6 w-full max-w-md mx-4">
                    <h3 class="text-lg font-semibold mb-4" id="modalTitle">Edit Address</h3>
                    <form id="addressForm" asp-action="UpdateAddress" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="userId" value="@Model.Id" />
                        <input type="hidden" id="addressType" name="addressType" value="" />

                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1" id="addressLabel">Address</label>
                                <input type="text" id="addressValue" name="addressValue"
                                       class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#088178] focus:border-[#088178]"
                                       required>
                            </div>
                        </div>

                        <div class="flex justify-end gap-3 mt-6">
                            <button type="button"
                                    class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
                                    onclick="hideAddressModal()">
                                Cancel
                            </button>
                            <button type="submit"
                                    class="px-4 py-2 bg-[#088178] text-white rounded-lg hover:bg-[#076b63] transition-colors">
                                Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div>
                <label class="block mb-1 lg:mb-2 text-gray-600 text-sm lg:text-base">Preferred Carriers</label>
                <div class="flex flex-wrap items-center gap-4">
                    <!-- Bosta -->
                    <form asp-action="ChangePreferredCarriers" method="post" class="flex items-center">
                        <input type="hidden" name="PreferredCarriers" value="Bosta">
                        <label class="flex items-center gap-2 cursor-pointer hover:bg-gray-50 transition-colors duration-200 px-2 py-1 rounded">
                            <div class="relative h-5 w-5">
                                <input type="radio"
                                       class="sr-only peer"
                                @(Model.PreferredCarriers == "Bosta" ? "checked" : "")
                                       onclick="this.form.submit()">
                                <div class="h-5 w-5 rounded-full border-2 flex items-center justify-center transition-colors
                                @(Model.PreferredCarriers == "Bosta" ? "border-[#088178] bg-[#088178]" : "border-gray-300")">
                                    @if (Model.PreferredCarriers == "Bosta")
                                    {
                                        <svg class="h-3 w-3 text-white" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    }
                                </div>
                            </div>
                            <i class="fas fa-box-open text-[#b0926e] mr-1"></i>
                            <span class="text-sm lg:text-base">Bosta</span>
                        </label>
                    </form>

                    <!-- DHL -->
                    <form asp-action="ChangePreferredCarriers" method="post" class="flex items-center">
                        <input type="hidden" name="PreferredCarriers" value="DHL">
                        <label class="flex items-center gap-2 cursor-pointer hover:bg-gray-50 transition-colors duration-200 px-2 py-1 rounded">
                            <div class="relative h-5 w-5">
                                <input type="radio"
                                       class="sr-only peer"
                                @(Model.PreferredCarriers == "DHL" ? "checked" : "")
                                       onclick="this.form.submit()">
                                <div class="h-5 w-5 rounded-full border-2 flex items-center justify-center transition-colors
                                @(Model.PreferredCarriers == "DHL" ? "border-[#088178] bg-[#088178]" : "border-gray-300")">
                                    @if (Model.PreferredCarriers == "DHL")
                                    {
                                        <svg class="h-3 w-3 text-white" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    }
                                </div>
                            </div>
                            <i class="fab fa-delicious text-yellow-500 mr-1"></i>
                            <span class="text-sm lg:text-base">DHL</span>
                        </label>
                    </form>

                    <!-- Aramex -->
                    <form asp-action="ChangePreferredCarriers" method="post" class="flex items-center">
                        <input type="hidden" name="PreferredCarriers" value="Aramex">
                        <label class="flex items-center gap-2 cursor-pointer hover:bg-gray-50 transition-colors duration-200 px-2 py-1 rounded">
                            <div class="relative h-5 w-5">
                                <input type="radio"
                                       class="sr-only peer"
                                @(Model.PreferredCarriers == "Aramex" ? "checked" : "")
                                       onclick="this.form.submit()">
                                <div class="h-5 w-5 rounded-full border-2 flex items-center justify-center transition-colors
                                @(Model.PreferredCarriers == "Aramex" ? "border-[#088178] bg-[#088178]" : "border-gray-300")">
                                    @if (Model.PreferredCarriers == "Aramex")
                                    {
                                        <svg class="h-3 w-3 text-white" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    }
                                </div>
                            </div>
                            <i class="fas fa-shipping-fast text-red-500 mr-1"></i>
                            <span class="text-sm lg:text-base">Aramex</span>
                        </label>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="bg-white p-4 lg:p-6 rounded-xl shadow-sm border border-gray-100">
        <h3 class="text-lg font-semibold mb-3 lg:mb-4 flex items-center">
            <i class="fas fa-bell text-primary mr-2"></i>
            Notifications
        </h3>
        <div class="space-y-2 lg:space-y-3">
            <label class="flex items-center justify-between p-3 lg:p-4 border rounded-lg hover:bg-gray-50">
                <div class="flex items-center">
                    <i class="fas fa-tag text-red-400 mr-2 lg:mr-3"></i>
                    <span class="text-sm lg:text-base">Discount Offers</span>
                </div>
                <input type="checkbox" class="toggle" checked>
            </label>
            <label class="flex items-center justify-between p-3 lg:p-4 border rounded-lg hover:bg-gray-50">
                <div class="flex items-center">
                    <i class="fas fa-box-open text-blue-400 mr-2 lg:mr-3"></i>
                    <span class="text-sm lg:text-base">Order Updates</span>
                </div>
                <input type="checkbox" class="toggle" checked>
            </label>
        </div>
    </div>
</div>

<script>
    document.getElementById("languageSelector")?.addEventListener("change", function () {
        this.form.submit();
    });

    document.getElementById("currencySelector")?.addEventListener("change", function () {
        this.form.submit();
    });

    function closeMessage(id) {
        let element = document.getElementById(id);
        if (element) {
            element.classList.add('animate-fade-out');
            setTimeout(() => element.remove(), 1000);
        }
    }

    document.addEventListener("DOMContentLoaded", function() {
        setTimeout(() => {
            closeMessage('successMessage');
            closeMessage('errorMessage');
        }, 5000);
    });
        document.querySelectorAll('form[asp-action="ChangePreferredCarriers"] label').forEach(label => {
        label.addEventListener('click', function() {
            this.closest('form').submit();
        });
    });
            function showAddressModal() {
            document.getElementById('addressModal').classList.remove('hidden');
            document.body.classList.add('overflow-hidden');
        }

        function hideAddressModal() {
            document.getElementById('addressModal').classList.add('hidden');
            document.body.classList.remove('overflow-hidden');
        }
          function showEditModal(type, currentAddress) {
            const modal = document.getElementById('addressModal');
            const title = document.getElementById('modalTitle');
            const addressTypeField = document.getElementById('addressType');
            const addressLabel = document.getElementById('addressLabel');
            const addressInput = document.getElementById('addressValue');
            const form = document.getElementById('addressForm');

            addressTypeField.value = type;

            if (type === 'primary') {
                title.textContent = 'Edit Primary Address';
                addressLabel.textContent = 'Primary Address';
                form.action = '@Url.Action("UpdatePrimaryAddress", "Setting")';
            }
            else if (type === 'secondary' || type === 'new') {
                title.textContent = type === 'secondary' ? 'Edit Secondary Address' : 'Add Secondary Address';
                addressLabel.textContent = 'Secondary Address';
                form.action = '@Url.Action("UpdateSecondaryAddress", "Setting")';
            }

            addressInput.value = currentAddress;
            modal.classList.remove('hidden');
            document.body.classList.add('overflow-hidden');
        }

        function hideAddressModal() {
            document.getElementById('addressModal').classList.add('hidden');
            document.body.classList.remove('overflow-hidden');
        }

</script>

<style>
    .animate-fade-in {
        opacity: 0;
        transform: translateY(-10px);
        animation: fadeIn 0.5s ease-out forwards;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-out {
        animation: fadeOut 1s ease-out forwards;
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 0;
            transform: translateY(-10px);
        }
    }
</style>